@{
    ViewData["Title"] = "Lab 1";
}

<h2>Lab 1</h2>

@if (ViewBag.ErrorMessage != null)
{
    <p style="color:red;">@ViewBag.ErrorMessage</p>
}

@if (ViewBag.SuccessMessage != null)
{
    <p style="color:green;">@ViewBag.SuccessMessage</p>
}

<div>
    <h3>Варіант 50</h3>
    <p>
        Вказано натуральне число x. Знайдіть число способів подати його у вигляді суми чотирьох натуральних чисел:
        <b>x = a + b + c + d</b>, де <b>a ≤ b ≤ c ≤ d</b>.
    </p>
    <p>
        Потрібно написати програму, яка обчислюватиме кількість таких способів подати число x.
    </p>
    <h4>Вхідні дані</h4>
    <p>
        Вхідний файл <b>INPUT.TXT</b> містить ціле число x (1 ≤ x ≤ 1500).
    </p>
    <h4>Вихідні дані</h4>
    <p>
        Вихідний файл <b>OUTPUT.TXT</b> повинен містити одне число — кількість способів подати x у вигляді суми чотирьох чисел.
    </p>
    <h4>Приклади</h4>
    <table style="border-collapse: collapse; width: 50%; text-align: left; border: 1px solid #ddd;">
        <thead>
            <tr>
                <th style="border: 1px solid #ddd; padding: 8px;">№</th>
                <th style="border: 1px solid #ddd; padding: 8px;">INPUT.TXT</th>
                <th style="border: 1px solid #ddd; padding: 8px;">OUTPUT.TXT</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="border: 1px solid #ddd; padding: 8px;">1</td>
                <td style="border: 1px solid #ddd; padding: 8px;">3</td>
                <td style="border: 1px solid #ddd; padding: 8px;">0</td>
            </tr>
            <tr>
                <td style="border: 1px solid #ddd; padding: 8px;">2</td>
                <td style="border: 1px solid #ddd; padding: 8px;">5</td>
                <td style="border: 1px solid #ddd; padding: 8px;">1</td>
            </tr>
        </tbody>
    </table>
    <br><br>
</div>

<form asp-controller="LabSelector" asp-action="RunLab" method="post" enctype="multipart/form-data">
    <input type="hidden" name="labName" value="Lab1" />

    <label for="inputFile">Select Input File:</label>
    <input type="file" id="inputFile" name="inputFile" accept=".txt" required />
    <br />
    <div>
        <strong>Input File Content:</strong>
        <pre id="inputFileContent" style="border: 1px solid #ddd; padding: 10px; max-height: 200px; overflow-y: auto;"></pre>
    </div>
    <br />

    <label for="outputFile">Select Output File:</label>
    <input type="file" id="outputFile" name="outputFile" accept=".txt" required />
    <br />
    <div>
        <strong>Output File Content:</strong>
        <pre id="outputFileContent" style="border: 1px solid #ddd; padding: 10px; max-height: 200px; overflow-y: auto;"></pre>
    </div>
    <br />

    <button type="submit">Run Lab 1</button>
</form>

@if (ViewBag.InputFileContent != null && ViewBag.OutputFileContent != null)
{
    <div>
        <h3>Input File Content:</h3>
        <pre>@ViewBag.InputFileContent</pre>
        <h3>Output File Content:</h3>
        <pre>@ViewBag.OutputFileContent</pre>
    </div>
}

<script>
    let lastInputFile = null;
    let lastOutputFile = null;

    function displayFileContent(file, targetId) {
        const target = document.getElementById(targetId); // Находим целевой элемент для отображения содержимого

        if (file) {
            const reader = new FileReader();

            reader.onload = function (e) {
                target.textContent = e.target.result;
            };

            reader.readAsText(file);
        } else {
            target.textContent = "No file selected.";
        }
    }

    // Проверяет изменения в выбранных файлах и обновляет их содержимое в соответствующих элементах.
    function monitorFileInputs() {
        const inputFileElement = document.getElementById("inputFile"); // Находим элемент ввода файла для input
        const outputFileElement = document.getElementById("outputFile"); // Находим элемент ввода файла для output

        // Проверяем, изменился ли выбранный файл ввода
        if (inputFileElement.files[0] !== lastInputFile) {
            lastInputFile = inputFileElement.files[0]; // Обновляем ссылку на последний выбранный файл
            displayFileContent(lastInputFile, "inputFileContent"); // Обновляем содержимое элемента отображения
        }

        // Проверяем, изменился ли выбранный файл вывода
        if (outputFileElement.files[0] !== lastOutputFile) {
            lastOutputFile = outputFileElement.files[0]; // Обновляем ссылку на последний выбранный файл
            displayFileContent(lastOutputFile, "outputFileContent"); // Обновляем содержимое элемента отображения
        }
    }

    // Запускаем мониторинг полей ввода каждые 500 мс
    setInterval(monitorFileInputs, 500);
</script>